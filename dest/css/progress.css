/**
 * Progress
 */
.progress {
    font-size: 1rem;
    margin: 0 0 1em;
    border-radius: 0.25em;
    background-color: #e8e8ec;
    height: 1em;
    line-height: 1.2;
    overflow: hidden;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    color: white; }

.progress--xs {
    font-size: 0.65rem;
    height: 0.5em; }

.progress--sm {
    font-size: 0.8rem;
    height: 0.75em; }

.progress--lg {
    font-size: 1.2rem;
    height: 1.5em; }

.progress__bar {
    box-sizing: border-box;
    padding: 0 1.65em;
    font-size: 0.8em;
    background-color: #1f0d33;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: flex-end;
        -ms-flex-pack: end;
            justify-content: flex-end;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }

.progress--primary .progress__bar {
    background-color: #1f0d33; }

.progress--success .progress__bar {
    background-color: #37d3bd; }

.progress--warning .progress__bar {
    background-color: #ffb000; }

.progress--danger .progress__bar {
    background-color: #fd4164; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
